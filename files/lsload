#!/usr/bin/env perl
@lines = qx/scontrol -o show node/;
printf ("%-18s %6s %6s %6s %8s %6s %6s %6s %6s   %-15s\n","Hostname","Cores","InUse","Ratio","Load","GPUs","InUse","Mem","Alloc","State");
foreach (@lines){
    chomp;
    ($reason) = $_ =~ /Reason=(.*)/;
    ($state) = $_ =~ /State=([^\s]+)/;
    ($real) = $_ =~ /RealMemory=([^\s]+)/;
    ($alloc) = $_ =~ /AllocMem=([^\s]+)/;
    ($cfgtres) = $_ =~ /CfgTRES=([^\s]+)/;
    ($alloctres) = $_ =~ /AllocTRES=([^\s]+)/;
    %data = map {/([^= ]+)/ => /=\s*(.*)/} split /\s+/;
    $data{'Reason'} = $reason;
    $data{'State'} = $state;
    $data{'RealMemory'} = $real;
    $data{'AllocMem'} = $alloc;

    %ctres = map{split /\=/, $_}(split /,/, $cfgtres);
    %atres = map{split /\=/, $_}(split /,/, $alloctres);

    if ($ctres{'gres/gpu'}){
      $cgpu = $ctres{'gres/gpu'};
      $agpu = $atres{'gres/gpu'};
    }
    else {
      $cgpu = 0;
      $agpu = 0;
    }

    if ($data{'Arch'}){
      printf ("%-18s %6d %6d",$data{'NodeName'},$data{'CPUTot'},$data{'CPUAlloc'});
      if ($data{'CPUAlloc'} > 0){ printf (" %6.1f ",( $data{'CPUAlloc'} / $data{'CPUTot'} ) * 100); }
      else { printf (" %6.1f ", "0.0"); }
      printf ("%8.2f %6d %6d %6d %6d   %-15s ",$data{'CPULoad'},int($cgpu),int($agpu),int($data{'RealMemory'} / 1024),int( $data{'AllocMem'} / 1024 ),$data{'State'});
      if ($data{'Reason'}) {print $data{'Reason'};}
      print "\n";
    }
    else {printf ("%-18s %6s %6s %6s %8s %6s %6s %6s %6s   %-15s %s\n",$data{'NodeName'}."(d)",0,0,0.0,0.00,0,0,0,0,"DOWN",$data{'Reason'});}
}

